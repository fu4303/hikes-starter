{"version":3,"sources":["webpack:///./node_modules/@lekoarts/gatsby-theme-emma/src/components/page.tsx","webpack:///./node_modules/@lekoarts/gatsby-theme-emma-core/src/templates/page-query.tsx","webpack:///./node_modules/@lekoarts/gatsby-theme-emma/src/@lekoarts/gatsby-theme-emma-core/components/page.tsx"],"names":["Page","page","data","titleProps","useSpring","config","slow","from","opacity","transform","to","contentProps","delay","title","description","excerpt","pathname","slug","image","cover","childImageSharp","fluid","slim","sx","position","bottom","left","right","maxWidth","margin","padding","zIndex","flexDirection","div","style","h1","body","PageComponent","query"],"mappings":"wSA4DeA,EAvCF,SAAC,GAA8B,IAApBC,EAAoB,EAA5BC,KAAQD,KAChBE,EAAaC,YAAU,CAC3BC,OAAQA,IAAOC,KACfC,KAAM,CAAEC,QAAS,EAAGC,UAAW,4BAC/BC,GAAI,CAAEF,QAAS,EAAGC,UAAW,0BAEzBE,EAAeP,YAAU,CAAEC,OAAQA,IAAOC,KAAMM,MAAO,IAAML,KAAM,CAAEC,QAAS,GAAKE,GAAI,CAAEF,QAAS,KAExG,OACE,YAAC,IAAD,KACE,YAAC,IAAD,CAAKK,MAAOZ,EAAKY,MAAOC,YAAab,EAAKc,QAASC,SAAUf,EAAKgB,OAClE,YAAC,IAAD,CAAMC,MAAOjB,EAAKkB,MAAMC,gBAAgBC,MAAOC,MAAI,GACjD,YAAC,IAAD,CACEC,GAAI,CACFC,SAAU,WACVC,OAAQ,EACRC,KAAM,EACNC,MAAO,EACPC,SAAU,MACVC,OAAQ,SACRC,QAAS,EACTC,OAAQ,EACRC,cAAe,WAGjB,YAAC,IAASC,IAAV,CAAcC,MAAO/B,GACnB,YAAC,IAAOgC,GAAR,KAAYlC,EAAKY,UAIvB,YAAC,IAAD,KACE,YAAC,IAASoB,IAAV,CAAcC,MAAOvB,GACnB,YAAC,cAAD,KAAcV,EAAKmC,U,urBClDdC,UCOA,YAAqB,IAAlBnC,EAAkB,EAAlBA,KACRD,EAASC,EAATD,KAER,OAAO,YAAC,EAAD,CAAMC,KAAI,KAAOA,EAAP,CAAaD,YAHjB,IDLFqC,EAAQ","file":"component---node-modules-lekoarts-gatsby-theme-emma-core-src-templates-page-query-tsx-5cd3c2532f9de3eff6aa.js","sourcesContent":["/** @jsx jsx */\nimport { animated, useSpring, config } from \"react-spring\"\nimport { Container, Styled, jsx, Flex } from \"theme-ui\"\nimport { MDXRenderer } from \"gatsby-plugin-mdx\"\nimport Layout from \"./layout\"\nimport SEO from \"./seo\"\nimport { ChildImageSharp } from \"../types\"\nimport Hero from \"./hero\"\n\ntype Props = {\n  data: {\n    page: {\n      title: string\n      slug: string\n      excerpt: string\n      body: string\n      cover: ChildImageSharp\n    }\n  }\n}\n\nconst Page = ({ data: { page } }: Props) => {\n  const titleProps = useSpring({\n    config: config.slow,\n    from: { opacity: 0, transform: `translate3d(0, -30px, 0)` },\n    to: { opacity: 1, transform: `translate3d(0, 0, 0)` },\n  })\n  const contentProps = useSpring({ config: config.slow, delay: 1000, from: { opacity: 0 }, to: { opacity: 1 } })\n\n  return (\n    <Layout>\n      <SEO title={page.title} description={page.excerpt} pathname={page.slug} />\n      <Hero image={page.cover.childImageSharp.fluid} slim>\n        <Flex\n          sx={{\n            position: `absolute`,\n            bottom: 0,\n            left: 0,\n            right: 0,\n            maxWidth: `5xl`,\n            margin: `0 auto`,\n            padding: 4,\n            zIndex: 2,\n            flexDirection: `column`,\n          }}\n        >\n          <animated.div style={titleProps}>\n            <Styled.h1>{page.title}</Styled.h1>\n          </animated.div>\n        </Flex>\n      </Hero>\n      <Container>\n        <animated.div style={contentProps}>\n          <MDXRenderer>{page.body}</MDXRenderer>\n        </animated.div>\n      </Container>\n    </Layout>\n  )\n}\n\nexport default Page\n","import { graphql } from \"gatsby\"\nimport PageComponent from \"../components/page\"\n\nexport default PageComponent\n\nexport const query = graphql`\n  query($slug: String!) {\n    page(slug: { eq: $slug }) {\n      title\n      slug\n      excerpt\n      body\n      cover {\n        childImageSharp {\n          fluid(maxWidth: 1920, quality: 90) {\n            ...GatsbyImageSharpFluid_withWebp\n          }\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport Page from \"../../../components/page\"\n\ntype Props = {\n  data: {\n    project: any\n    [key: string]: any\n  }\n}\n\nexport default ({ data }: Props) => {\n  const { page } = data\n\n  return <Page data={{ ...data, page }} />\n}\n"],"sourceRoot":""}