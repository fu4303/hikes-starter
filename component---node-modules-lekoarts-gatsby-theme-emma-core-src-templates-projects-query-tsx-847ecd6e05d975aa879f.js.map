{"version":3,"sources":["webpack:///./node_modules/@lekoarts/gatsby-theme-emma/src/components/project-item.tsx","webpack:///./node_modules/@lekoarts/gatsby-theme-emma/src/components/projects.tsx","webpack:///./node_modules/@lekoarts/gatsby-theme-emma-core/src/templates/projects-query.tsx","webpack:///./node_modules/@lekoarts/gatsby-theme-emma/src/@lekoarts/gatsby-theme-emma-core/components/projects.tsx"],"names":["ProjectItem","node","style","div","sx","position","content","display","paddingTop","left","height","top","width","a","color","opacity","padding","zIndex","transition","textDecoration","fluid","cover","childImageSharp","to","slug","aria-label","title","alt","src","tracedSVG","right","bottom","filter","objectFit","backgroundColor","fontSize","fontWeight","client","service","Projects","projects","trail","useTrail","length","from","p","role","href","gridTemplateColumns","map","index","key","query","ProjectsComponent","allProject","data","nodes"],"mappings":"uOA8GeA,EA3FK,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,MAAT,OAClB,YAAC,IAASC,IAAV,CACEC,GAAI,CACFC,SAAU,WACV,WAAY,CACVC,QAAS,KACTC,QAAS,QACTC,WAAY,SAGhBN,MAAOA,GAEP,mBACEE,GAAI,CACFK,KAAM,EACNC,OAAQ,OACRL,SAAU,WACVM,IAAK,EACLC,MAAO,OACPC,EAAG,CACDC,MAAO,QACPJ,OAAQ,OACRD,KAAM,EACNM,QAAS,EACTC,QAAS,EACTX,SAAU,WACVM,IAAK,EACLC,MAAO,OACPK,OAAQ,GACRC,WAAY,uBACZC,eAAgB,OAChB,UAAW,CACTL,MAAO,QACPC,QAAS,EACTI,eAAgB,WAKtB,mBACEf,GAAI,CACF,QAAS,CACPM,OAAQ,OACRD,KAAM,EACNJ,SAAU,sBACVM,IAAK,EACLC,MAAO,OACP,QAAS,CACPP,SAAU,wBAKhB,YAAC,IAAD,CAAKe,MAAOnB,EAAKoB,MAAMC,gBAAgBF,SAEzC,YAAC,OAAD,CAAMG,GAAItB,EAAKuB,KAAMC,aAAA,uBAAmCxB,EAAKyB,OAC3D,mBACEC,IAAI,GACJC,IAAK3B,EAAKoB,MAAMC,gBAAgBF,MAAMS,UACtCzB,GAAI,CACFC,SAAU,WACVM,IAAK,EACLF,KAAM,EACNqB,MAAO,EACPC,OAAQ,EACRnB,MAAO,OACPF,OAAQ,OACRsB,OAAQ,eACRf,QAAS,EACTF,QAAS,IACTkB,UAAW,WAGf,mBACE7B,GAAI,CACF8B,gBAAiBjC,EAAKa,MACtBJ,OAAQ,OACRD,KAAM,EACNJ,SAAU,WACVM,IAAK,EACLC,MAAO,OACPK,QAAS,KAGb,mBAAKb,GAAI,CAAE+B,SAAU,EAAGC,WAAY,SAAWnC,EAAKoC,QACpD,mBAAKjC,GAAI,CAAE+B,SAAU,IAAMlC,EAAKqC,aC/BzBC,EAvDE,SAAC,GAAwB,IAAtBC,EAAsB,EAAtBA,SACZC,EAAQC,YAASF,EAASG,OAAQ,CACtCC,KAAM,CAAElC,OAAQ,MAChBa,GAAI,CAAEb,OAAQ,UAGhB,OAAwB,IAApB8B,EAASG,OAET,YAAC,IAAD,KACE,YAAC,IAAD,KACE,YAAC,IAAOE,EAAR,eAEE,oBAAMC,KAAK,MAAMrB,aAAW,cAA5B,MAFF,IAME,uBANF,oBAOmB,oDAPnB,qDAQE,iCARF,mFASE,YAAC,IAAOZ,EAAR,CAAUkC,KAAK,kFAAf,UATF,mCAeA,YAAC,IAAOF,EAAR,KACE,+BADF,IACgB,uBADhB,gDAE+C,4CAF/C,qDAGoB,mCAHpB,kBAGuD,qCAHvD,iFAKE,YAAC,IAAOhC,EAAR,CAAUkC,KAAK,kFAAf,UALF,OAgBN,YAAC,IAAD,CACE3C,GAAI,CACFG,QAAS,OACTyC,oBAAqB,uCACrBpC,MAAO,SAGR6B,EAAMQ,KAAI,SAAC/C,EAAOgD,GAAR,OACT,YAAC,EAAD,CAAahD,MAAOA,EAAOD,KAAMuC,EAASU,GAAQC,IAAKX,EAASU,GAAO1B,YC9DlE4B,GAFEC,UCOA,YAAqB,IAC1BC,EAD0B,EAAlBC,KACRD,WAER,OAAO,YAAC,EAAD,CAAUd,SAAUc,EAAWE,SDRnB","file":"component---node-modules-lekoarts-gatsby-theme-emma-core-src-templates-projects-query-tsx-847ecd6e05d975aa879f.js","sourcesContent":["/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport Img from \"gatsby-image\"\nimport { Link } from \"gatsby\"\nimport { animated } from \"react-spring\"\nimport { ChildImageSharp } from \"../types\"\n\ntype Props = {\n  node: {\n    color: string\n    title: string\n    slug: string\n    service: string\n    client: string\n    cover: ChildImageSharp\n  }\n  style: any\n}\n\nconst ProjectItem = ({ node, style }: Props) => (\n  <animated.div\n    sx={{\n      position: `relative`,\n      \"&:before\": {\n        content: `\"\"`,\n        display: `block`,\n        paddingTop: `100%`,\n      },\n    }}\n    style={style}\n  >\n    <div\n      sx={{\n        left: 0,\n        height: `100%`,\n        position: `absolute`,\n        top: 0,\n        width: `100%`,\n        a: {\n          color: `white`,\n          height: `100%`,\n          left: 0,\n          opacity: 0,\n          padding: 4,\n          position: `absolute`,\n          top: 0,\n          width: `100%`,\n          zIndex: 10,\n          transition: `all 0.3s ease-in-out`,\n          textDecoration: `none`,\n          \"&:hover\": {\n            color: `white`,\n            opacity: 1,\n            textDecoration: `none`,\n          },\n        },\n      }}\n    >\n      <div\n        sx={{\n          \"> div\": {\n            height: `100%`,\n            left: 0,\n            position: `absolute !important`,\n            top: 0,\n            width: `100%`,\n            \"> div\": {\n              position: `static !important`,\n            },\n          },\n        }}\n      >\n        <Img fluid={node.cover.childImageSharp.fluid} />\n      </div>\n      <Link to={node.slug} aria-label={`View detail page of ${node.title}`}>\n        <img\n          alt=\"\"\n          src={node.cover.childImageSharp.fluid.tracedSVG}\n          sx={{\n            position: `absolute`,\n            top: 0,\n            left: 0,\n            right: 0,\n            bottom: 0,\n            width: `100%`,\n            height: `100%`,\n            filter: `invert(100%)`,\n            zIndex: -1,\n            opacity: 0.08,\n            objectFit: `cover`,\n          }}\n        />\n        <div\n          sx={{\n            backgroundColor: node.color,\n            height: `100%`,\n            left: 0,\n            position: `absolute`,\n            top: 0,\n            width: `100%`,\n            zIndex: -2,\n          }}\n        />\n        <div sx={{ fontSize: 5, fontWeight: `bold` }}>{node.client}</div>\n        <div sx={{ fontSize: 2 }}>{node.service}</div>\n      </Link>\n    </div>\n  </animated.div>\n)\n\nexport default ProjectItem\n","/** @jsx jsx */\nimport { jsx, Container, Styled } from \"theme-ui\"\nimport { useTrail } from \"react-spring\"\nimport Layout from \"./layout\"\nimport { ChildImageSharp } from \"../types\"\nimport ProjectItem from \"./project-item\"\n\ntype Props = {\n  projects: {\n    color: string\n    slug: string\n    title: string\n    service: string\n    client: string\n    cover: ChildImageSharp\n  }[]\n}\n\nconst Projects = ({ projects }: Props) => {\n  const trail = useTrail(projects.length, {\n    from: { height: `0%` },\n    to: { height: `100%` },\n  })\n\n  if (projects.length === 0) {\n    return (\n      <Layout>\n        <Container>\n          <Styled.p>\n            Hi!{` `}\n            <span role=\"img\" aria-label=\"Wave emoji\">\n              ðŸ‘‹\n            </span>\n            {` `}\n            <br />\n            Thanks for using <b>@lekoarts/gatsby-theme-emma</b>. You currently don't have any content in your{` `}\n            <i>projects</i> folder - that's why this page displays a placeholder text. Head over to the{` `}\n            <Styled.a href=\"https://github.com/LekoArts/gatsby-themes/tree/master/themes/gatsby-theme-emma\">\n              README\n            </Styled.a>\n            {` `}\n            to learn how to setup them.\n          </Styled.p>\n          <Styled.p>\n            <b>TL;DR:</b> <br />\n            The starter automatically created the folder <code>content/projects</code>. Go into this folder, create a\n            new folder called <code>example</code> and create an <code>index.mdx</code> file there and place an image.\n            Edit the frontmatter like described in the{` `}\n            <Styled.a href=\"https://github.com/LekoArts/gatsby-themes/tree/master/themes/gatsby-theme-emma\">\n              README\n            </Styled.a>\n            .\n          </Styled.p>\n        </Container>\n      </Layout>\n    )\n  }\n\n  return (\n    <Layout\n      sx={{\n        display: `grid`,\n        gridTemplateColumns: `repeat(auto-fit, minmax(280px, 1fr))`,\n        width: `100%`,\n      }}\n    >\n      {trail.map((style, index) => (\n        <ProjectItem style={style} node={projects[index]} key={projects[index].slug} />\n      ))}\n    </Layout>\n  )\n}\n\nexport default Projects\n","import { graphql } from \"gatsby\"\nimport ProjectsComponent from \"../components/projects\"\n\nexport default ProjectsComponent\n\nexport const query = graphql`\n  query {\n    allProject(sort: { fields: date, order: DESC }) {\n      nodes {\n        color\n        slug\n        service\n        client\n        title\n        cover {\n          childImageSharp {\n            fluid(maxWidth: 850, quality: 90, traceSVG: { color: \"#e6e6e6\" }) {\n              ...GatsbyImageSharpFluid_withWebp_tracedSVG\n            }\n          }\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport Projects from \"../../../components/projects\"\n\ntype Props = {\n  data: {\n    allProject: any\n    [key: string]: string\n  }\n}\n\nexport default ({ data }: Props) => {\n  const { allProject } = data\n\n  return <Projects projects={allProject.nodes} />\n}\n"],"sourceRoot":""}