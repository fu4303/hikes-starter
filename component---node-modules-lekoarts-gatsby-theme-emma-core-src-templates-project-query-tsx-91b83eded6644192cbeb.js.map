{"version":3,"sources":["webpack:///./node_modules/@lekoarts/gatsby-theme-emma/src/components/project-info-item.tsx","webpack:///./node_modules/@lekoarts/gatsby-theme-emma/src/components/project-info.tsx","webpack:///./node_modules/@lekoarts/gatsby-theme-emma/src/components/project.tsx","webpack:///./node_modules/@lekoarts/gatsby-theme-emma-core/src/templates/project-query.tsx","webpack:///./node_modules/@lekoarts/gatsby-theme-emma/src/@lekoarts/gatsby-theme-emma-core/components/project.tsx"],"names":["ProjectInfoItem","name","content","sx","flexDirection","mr","mb","textTransform","color","letterSpacing","fontWeight","fontSize","ProjectInfo","project","mt","flexWrap","client","date","service","Project","data","titleProps","useSpring","config","slow","from","opacity","transform","to","infoProps","delay","contentProps","title","description","excerpt","pathname","slug","image","cover","childImageSharp","resize","src","value","fluid","position","bottom","left","right","maxWidth","margin","padding","zIndex","div","style","h1","body","ProjectComponent","query"],"mappings":"kTAgCeA,EAxBS,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAAT,OACtB,YAAC,IAAD,CACEC,GAAI,CACFC,cAAe,SACf,uBAAwB,CACtBC,GAAI,GAENC,GAAI,IAGN,mBACEH,GAAI,CACFI,cAAe,YACfC,MAAO,UACPC,cAAe,QACfC,WAAY,aAGbT,GAEH,mBAAKE,GAAI,CAAEQ,SAAU,IAAMT,KCRhBU,EARK,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAClB,YAAC,IAAD,CAAMV,GAAI,CAAEW,GAAI,EAAGR,GAAI,CAAC,EAAG,GAAIS,SAAU,SACvC,YAAC,EAAD,CAAMd,KAAK,SAASC,QAASW,EAAQG,SACrC,YAAC,EAAD,CAAMf,KAAK,OAAOC,QAASW,EAAQI,OACnC,YAAC,EAAD,CAAMhB,KAAK,UAAUC,QAASW,EAAQK,YC+D3BC,EArDC,SAAC,GAAiC,IAAvBN,EAAuB,EAA/BO,KAAQP,QACnBQ,EAAaC,YAAU,CAC3BC,OAAQA,IAAOC,KACfC,KAAM,CAAEC,QAAS,EAAGC,UAAW,4BAC/BC,GAAI,CAAEF,QAAS,EAAGC,UAAW,0BAEzBE,EAAYP,YAAU,CAAEC,OAAQA,IAAOC,KAAMM,MAAO,IAAKL,KAAM,CAAEC,QAAS,GAAKE,GAAI,CAAEF,QAAS,KAC9FK,EAAeT,YAAU,CAAEC,OAAQA,IAAOC,KAAMM,MAAO,IAAML,KAAM,CAAEC,QAAS,GAAKE,GAAI,CAAEF,QAAS,KAExG,OACE,YAAC,IAAD,KACE,YAAC,IAAD,CACEM,MAAOnB,EAAQmB,MACfC,YAAapB,EAAQqB,QACrBC,SAAUtB,EAAQuB,KAClBC,MAAOxB,EAAQyB,MAAMC,gBAAgBC,OAAQC,KAE7C,oBAAMxC,KAAK,iBAAiByC,MAAM,WAClC,oBAAMzC,KAAK,iBAAiByC,MAAM,SAClC,oBAAMzC,KAAK,gBAAgByC,MAAO7B,EAAQG,SAC1C,oBAAMf,KAAK,gBAAgByC,MAAO7B,EAAQI,QAE5C,YAAC,IAAD,CAAMoB,MAAOxB,EAAQyB,MAAMC,gBAAgBI,MAAOnC,MAAOK,EAAQL,OAC/D,YAAC,IAAD,CACEL,GAAI,CACFyC,SAAU,WACVC,OAAQ,EACRC,KAAM,EACNC,MAAO,EACPC,SAAU,MACVC,OAAQ,SACRC,QAAS,EACTC,OAAQ,EACR/C,cAAe,WAGjB,YAAC,IAASgD,IAAV,CAAcC,MAAOhC,GACnB,YAAC,IAAOiC,GAAR,KAAYzC,EAAQmB,QAEtB,YAAC,IAASoB,IAAV,CAAcC,MAAOxB,GACnB,YAAC,EAAD,CAAahB,QAASA,OAI5B,YAAC,IAAD,KACE,YAAC,IAASuC,IAAV,CAAcC,MAAOtB,GACnB,YAAC,cAAD,KAAclB,EAAQ0C,U,urBCrEjBC,UCOA,YAAqB,IAAlBpC,EAAkB,EAAlBA,KACRP,EAAYO,EAAZP,QAER,OAAO,YAAC,EAAD,CAASO,KAAI,KAAOA,EAAP,CAAaP,eAHpB,IDLF4C,EAAQ","file":"component---node-modules-lekoarts-gatsby-theme-emma-core-src-templates-project-query-tsx-91b83eded6644192cbeb.js","sourcesContent":["/** @jsx jsx */\nimport { Flex, jsx } from \"theme-ui\"\n\ntype ItemProps = {\n  name: string\n  content: string\n}\n\nconst ProjectInfoItem = ({ name, content }: ItemProps) => (\n  <Flex\n    sx={{\n      flexDirection: `column`,\n      \"&:not(:last-of-type)\": {\n        mr: 5,\n      },\n      mb: 2,\n    }}\n  >\n    <div\n      sx={{\n        textTransform: `uppercase`,\n        color: `primary`,\n        letterSpacing: `wider`,\n        fontWeight: `semibold`,\n      }}\n    >\n      {name}\n    </div>\n    <div sx={{ fontSize: 2 }}>{content}</div>\n  </Flex>\n)\n\nexport default ProjectInfoItem\n","/** @jsx jsx */\nimport { Flex, jsx } from \"theme-ui\"\nimport Item from \"./project-info-item\"\n\ntype ProjectInfoProps = {\n  project: {\n    client: string\n    date: string\n    service: string\n  }\n}\n\nconst ProjectInfo = ({ project }: ProjectInfoProps) => (\n  <Flex sx={{ mt: 4, mb: [2, 4], flexWrap: `wrap` }}>\n    <Item name=\"Client\" content={project.client} />\n    <Item name=\"Date\" content={project.date} />\n    <Item name=\"Service\" content={project.service} />\n  </Flex>\n)\n\nexport default ProjectInfo\n","/** @jsx jsx */\nimport { animated, useSpring, config } from \"react-spring\"\nimport { Container, Styled, jsx, Flex } from \"theme-ui\"\nimport { MDXRenderer } from \"gatsby-plugin-mdx\"\nimport Layout from \"./layout\"\nimport SEO from \"./seo\"\nimport { ChildImageSharp } from \"../types\"\nimport Hero from \"./hero\"\nimport ProjectInfo from \"./project-info\"\n\ntype Props = {\n  data: {\n    project: {\n      body: string\n      excerpt: string\n      client: string\n      color: string\n      date: string\n      service: string\n      slug: string\n      title: string\n      cover: ChildImageSharp\n    }\n  }\n}\n\nconst Project = ({ data: { project } }: Props) => {\n  const titleProps = useSpring({\n    config: config.slow,\n    from: { opacity: 0, transform: `translate3d(0, -30px, 0)` },\n    to: { opacity: 1, transform: `translate3d(0, 0, 0)` },\n  })\n  const infoProps = useSpring({ config: config.slow, delay: 500, from: { opacity: 0 }, to: { opacity: 1 } })\n  const contentProps = useSpring({ config: config.slow, delay: 1000, from: { opacity: 0 }, to: { opacity: 1 } })\n\n  return (\n    <Layout>\n      <SEO\n        title={project.title}\n        description={project.excerpt}\n        pathname={project.slug}\n        image={project.cover.childImageSharp.resize!.src}\n      >\n        <meta name=\"twitter:label1\" value=\"Client\" />\n        <meta name=\"twitter:label2\" value=\"Date\" />\n        <meta name=\"twitter:data1\" value={project.client} />\n        <meta name=\"twitter:data2\" value={project.date} />\n      </SEO>\n      <Hero image={project.cover.childImageSharp.fluid} color={project.color}>\n        <Flex\n          sx={{\n            position: `absolute`,\n            bottom: 0,\n            left: 0,\n            right: 0,\n            maxWidth: `5xl`,\n            margin: `0 auto`,\n            padding: 4,\n            zIndex: 2,\n            flexDirection: `column`,\n          }}\n        >\n          <animated.div style={titleProps}>\n            <Styled.h1>{project.title}</Styled.h1>\n          </animated.div>\n          <animated.div style={infoProps}>\n            <ProjectInfo project={project} />\n          </animated.div>\n        </Flex>\n      </Hero>\n      <Container>\n        <animated.div style={contentProps}>\n          <MDXRenderer>{project.body}</MDXRenderer>\n        </animated.div>\n      </Container>\n    </Layout>\n  )\n}\n\nexport default Project\n","import { graphql } from \"gatsby\"\nimport ProjectComponent from \"../components/project\"\n\nexport default ProjectComponent\n\nexport const query = graphql`\n  query($slug: String!, $formatString: String!) {\n    project(slug: { eq: $slug }) {\n      body\n      excerpt\n      client\n      color\n      date(formatString: $formatString)\n      service\n      slug\n      title\n      cover {\n        childImageSharp {\n          fluid(maxWidth: 1920, quality: 90) {\n            ...GatsbyImageSharpFluid_withWebp\n          }\n          resize(width: 800) {\n            src\n          }\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport Project from \"../../../components/project\"\n\ntype Props = {\n  data: {\n    project: any\n    [key: string]: any\n  }\n}\n\nexport default ({ data }: Props) => {\n  const { project } = data\n\n  return <Project data={{ ...data, project }} />\n}\n"],"sourceRoot":""}